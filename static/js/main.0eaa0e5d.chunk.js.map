{"version":3,"sources":["index.js"],"names":["calculateWinner","squares","lines","i","length","a","b","c","Reset","props","className","onClick","Square","value","Board","resetClick","this","squareClick","renderSquare","renderReset","React","Component","Game","state","history","Array","fill","turnCount","setState","lhistory","slice","lsquares","concat","step","render","status","current","winner","moves","map","move","desc","jumpTo","handleSquare","handleReset","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0eaa0e5d.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c])\n      return squares[a];\n  }\n  return null;\n}\n\nfunction Reset(props) {\n  return (\n      <button className=\"reset\" onClick={props.onClick}>\n      ResetButtonnnnn\n    </button>    \n  );\n}\n\nfunction Square(props) {\n  return (\n      <button className=\"square\" onClick={props.onClick}>\n        {props.value}\n      </button>\n  );\n}\n\nclass Board extends React.Component {\n\n  renderReset() {\n    return (\n      <Reset\n      onClick={ () => this.props.resetClick() }\n      />\n    );\n  }\n\n  renderSquare(i) {\n    return (\n\t<Square \n      value={this.props.squares[i]}\n      onClick={ () => this.props.squareClick(i) }\n\t/>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n\t<div className=\"resetButton\">\n\t{this.renderReset()} \n\t</div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n\tsquares: Array(9).fill(null),\n      }],\n      turnCount: 0\n    };\n  }\n\n  handleReset() {\n    this.setState({\n      history: [{\n\tsquares: Array(9).fill(null),\n      }],\n      turnCount: 0\n    });\n  }\n\n  handleSquare(i) {\n    // l ... mean local\n    const lhistory = this.state.history.slice(0, this.state.turnCount + 1);\n    const lcurrent = lhistory[lhistory.length - 1];\n    const lsquares = lcurrent.squares.slice();\n\n    if (lsquares[i] || calculateWinner(lsquares))  return;\n    lsquares[i] = this.state.turnCount % 2 == 0 ? 'O' : 'X';\n    this.setState({\n      history: lhistory.concat([{\n\tsquares: lsquares,\n      }]),\n      //turnCount: this.state.turnCount + 1,\n      turnCount: lhistory.length,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      turnCount: step,\n    });\n    this.render();\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.turnCount];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      const debug = 'step : ' + step + '  move : ' + move + '   ';\n      const desc = debug + (move ?\n\t\t\t    'Go to move # ' + move :\n\t\t\t    'Go to game start');\n      return (\n\t  <li key={move}>\n\t  <button onClick={() => this.jumpTo(move)}>{desc}</button>\n\t  </li>\n      );\n    });\n    \n\n    let status;\n    if (winner)  status = 'WINNER : ' + winner + ' !';\n    else  status = 'Next Player : ' + (this.state.turnCount % 2 == 0 ? 'O' : 'X');\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n      squares={current.squares}\n      squareClick={(i) => this.handleSquare(i)}\n      resetClick={() => this.handleReset()}\n\t/>\n        </div>\n        <div className=\"game-info\">\n          <div>{ status }</div>\n          <ol>{ moves }</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}